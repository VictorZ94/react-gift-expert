{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GiftGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categorias","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"2MAuCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,qCACA,6BAAMD,IACN,sBAAME,OAAO,GAAGC,SAZC,SAACC,GAClBA,EAAEC,iBAEGL,EAAWM,OAAOC,OAAS,IAC5BT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,MAOlB,SACI,uBACIQ,KAAK,OACLC,MAAQV,EACRW,SApBa,SAACP,GACtBH,EAAcG,EAAEQ,OAAOF,gB,QCPlBG,EAAe,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACrC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCLHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDC0BLK,EAxBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEf,ECDwB,SAAEA,GAE1B,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDhB0BK,CAAanB,GAAjCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAMb,IAEJa,GAAW,2CAEb,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAY,GACP,OAAO,cAAC,EAAD,eAEEA,GADAA,EAAM3B,aEsBxB4B,EAlCM,WAIjB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmBC,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAa9C,cAAgB8C,IAC7B,uBAEA,6BAGQD,EAAWd,KAAI,SAAAR,GAAQ,OACnB,6BACI,cAAC,EAAD,CACIA,SAAWA,KAFTA,YCtBlCwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.900b442b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputValue = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories(cate => [inputValue, ...cate ])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <>\n        <h1>{ inputValue }</h1>\n        <form action=\"\" onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputValue }\n            />\n        </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","import React from 'react'\n\nexport const GiftGridItem = ({id, title, url}) => {\n    return (\n        <div className='card'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n","import { GiftGridItem } from './GiftGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading...</p> }\n\n            <div className='card-grid'>\n                {\n                    images.map(image => {\n                        return <GiftGridItem \n                            key={image.id}\n                            { ...image }\n                        />\n                    })\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    }, [category])\n\n    return state; // { data:[], loading: true };\n}\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\n\nconst GifExpertApp = () => {\n\n\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball Z']\n    const [categorias, setCategorias] = useState(['Dragon Ball'])\n\n    // const handleAdd = () => {\n    //     const name = 'Naruto';\n    //     setCategorias([...categorias, name]);\n    //     setCategorias(category => [...categorias, name]); // category: estado anterior ------ [...categorias, name]: estado nuevo\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategorias }/>\n            <hr />\n\n            <ol>\n\n                {\n                    categorias.map(category => (\n                        <li key={ category }>\n                            <GifGrid\n                                category={ category }\n                            />\n                        </li>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}